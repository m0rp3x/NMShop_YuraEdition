@inherits LayoutComponentBase

<MudThemeProvider Theme="@_theme" IsDarkMode="_isDarkMode" />
<MudPopoverProvider />
<MudDialogProvider />
<MudSnackbarProvider />
<MudLayout Class="d-flex flex-column" Style="min-height: 100vh; max-width: 100vw; overflow-x: hidden;">
    
    <Cart/>

    <NavMenu/>

    <Search/>

    <MudMainContent Class="d-flex flex-column">
        @Body
    </MudMainContent>

    <Footer/>

</MudLayout>

<script>
    function BlazorScrollToId(id) {
        const element = document.getElementById(id);
        if (element instanceof HTMLElement) {
            element.scrollIntoView({
                behavior: "smooth",
                block: "start",
                inline: "nearest"
            });
        }
    }
</script>

<style>
    *[id] {
        scroll-margin-top: 5rem; 
    }
</style>


<div id="blazor-error-ui">
    Произошла неизвестная ошибка
    <a href="" class="reload">Перезагрузить страницу</a>
    <a class="dismiss">🗙</a>
</div>

@code {

    private bool _isDarkMode = false;
    private MudTheme? _theme = null;

    protected override void OnInitialized()
    {
        base.OnInitialized();

        _theme = new()
        {
            PaletteLight = _lightPalette,
            PaletteDark = _darkPalette,
            LayoutProperties = new LayoutProperties(),
                Typography = _customTypography
            };
    }

    private void DarkModeToggle()
    {
        _isDarkMode = !_isDarkMode;
    }



    private readonly Typography _customTypography = new Typography
        {
            Default = new Default
            {
                FontFamily = new[] { "Unbounded", "Podkova", "Roboto", "Helvetica", "Arial", "sans-serif" },
                FontWeight = 600,
                FontSize = "1.25rem"
            },
            H1 = new H1
            {
                FontFamily = new[] { "Unbounded", "Podkova", "Roboto", "Helvetica", "Arial", "sans-serif" },
                FontWeight = 600,
                FontSize = "calc( (100vw - 480px)/(1280 - 480) * (96 - 77) + 77px )",
                LineHeight = 1.167,
                LetterSpacing = "-.01562em",
                TextTransform = "none",
            },
            H2 = new H2
            {
                FontFamily = new[] { "Unbounded", "Podkova", "Roboto", "Helvetica", "Arial", "sans-serif" },
                FontWeight = 600,
                FontSize = "calc( (100vw - 480px)/(1280 - 480) * (60 - 48) + 48px )",
                LineHeight = 1.2,
                LetterSpacing = "-.00833em",
                TextTransform = "none",
            },
            H3 = new H3
            {
                FontFamily = new[] { "Unbounded", "Podkova", "Roboto", "Helvetica", "Arial", "sans-serif" },
                FontWeight = 600,
                FontSize = "calc( (100vw - 480px)/(1280 - 480) * (48 - 38) + 38px )",
                LineHeight = 1.167,
                LetterSpacing = "0",
                TextTransform = "none",
            },
            H4 = new H4
            {
                FontFamily = new[] { "Unbounded", "Podkova", "Roboto", "Helvetica", "Arial", "sans-serif" },
                FontWeight = 600,
                FontSize = "calc( (100vw - 480px)/(1280 - 480) * (34 - 30) + 30px )",
                LineHeight = 1.235,
                LetterSpacing = ".00735em",
                TextTransform = "none",
            },
            H5 = new H5
            {
                FontFamily = new[] { "Unbounded", "Podkova", "Roboto", "Helvetica", "Arial", "sans-serif" },
                FontWeight = 600,
                FontSize = "calc( (100vw - 480px)/(1280 - 480) * (20 - 17) + 17px )",
                LineHeight = 1.334,
                LetterSpacing = "0",
                TextTransform = "none",
            },
            H6 = new H6
            {
                FontFamily = new[] { "Unbounded", "Podkova", "Roboto", "Helvetica", "Arial", "sans-serif" },
                FontWeight = 600,
                FontSize = "calc( (100vw - 480px)/(1280 - 480) * (20 - 16) + 16px )",
                LineHeight = 1.6,
                LetterSpacing = "0",
                TextTransform = "none",
            },
            Body1 = new Body1
            {
                FontFamily = new[] { "Unbounded", "Podkova", "Roboto", "Helvetica", "Arial", "sans-serif" },
                FontWeight = 600,
                FontSize = "calc( (100vw - 480px)/(1280 - 480) * (16 - 13) + 13px )",
                LineHeight = 1.5,
                LetterSpacing = ".00938em",
                TextTransform = "none",
            },
            Body2 = new Body2
            {
                FontFamily = new[] { "Unbounded", "Podkova", "Roboto", "Helvetica", "Arial", "sans-serif" },
                FontWeight = 600,
                FontSize = "calc( (100vw - 480px)/(1280 - 480) * (14 - 11) + 11px )",
                LineHeight = 1.43,
                LetterSpacing = ".01071em",
                TextTransform = "none",
            }
        };




    private readonly PaletteLight _lightPalette = new()
    {
        Primary = "#000000",
        Secondary = "#ffffff",
        Black = "#110e2d",
        AppbarText = "#424242",
        AppbarBackground = "rgba(255,255,255,1)",
        DrawerBackground = "#ffffff",
        GrayLight = "#e8e8e8",
        GrayLighter = "#f9f9f9",
        LinesInputs = "#000000"
    };

    private readonly PaletteDark _darkPalette = new()
    {
        Primary = "#000000",
        Surface = "#1e1e2d",
        Background = "#1a1a27",
        BackgroundGray = "#151521",
        AppbarText = "#92929f",
        AppbarBackground = "rgba(26,26,39,0.8)",
        DrawerBackground = "#1a1a27",
        ActionDefault = "#74718e",
        ActionDisabled = "#9999994d",
        ActionDisabledBackground = "#605f6d4d",
        TextPrimary = "#b2b0bf",
        TextSecondary = "#92929f",
        TextDisabled = "#ffffff33",
        DrawerIcon = "#92929f",
        DrawerText = "#92929f",
        GrayLight = "#2a2833",
        GrayLighter = "#1e1e2d",
        Info = "#4a86ff",
        Success = "#3dcb6c",
        Warning = "#ffb545",
        Error = "#ff3f5f",
        LinesDefault = "#33323e",
        TableLines = "#33323e",
        Divider = "#292838",
        OverlayLight = "#1e1e2d80",
        LinesInputs = "#000000",
        
    };

    public string DarkLightModeButtonIcon => _isDarkMode switch
    {
        true => Icons.Material.Rounded.AutoMode,
        false => Icons.Material.Outlined.DarkMode,
    };
}


