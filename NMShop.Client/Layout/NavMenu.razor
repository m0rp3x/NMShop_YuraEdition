@using NMShop.Client.Services;

@inject NavigationManager Navigation
@inject CartService CartService
@inject SearchService SearchService
@inject ClientDataProvider DataProvider

<MudAppBar Elevation="0" Style=@($"z-index: {(int)ZEnum.AppBar}") >

    <MudHidden Breakpoint="Breakpoint.LgAndUp">
        <MudImage @onclick="NavigateMain" Src="/assets/icons/logo.svg" ObjectPosition="ObjectPosition.Center" Width="35" Height="35" />
        
        <MudSpacer/>

        <div style="color: var(--mud-palette-text-primary);">
            <MudIconButton OnClick="SearchService.ToggleSearch" Icon="@Icons.Material.Filled.Search" Color="Color.Inherit" />
            <MudIconButton OnClick="CartService.ToggleCart" Icon="@Icons.Material.Outlined.ShoppingCart" Color="Color.Inherit" />
            <MudIconButton OnClick="() => {_isMenuHidden = !_isMenuHidden;}" Icon="@Icons.Material.Filled.MenuOpen" Color="Color.Inherit" />
        </div>

        <div class="absolute p-6" style=@("transition: all 0.7s ease 0s; -webkit-transition: all 0.7s ease 0s; overflow: hidden; top: 100%; left: 0; right: 0; background-color: #F8F8F8; width: 100%;" + (_isMenuHidden ? "height: 0;" : "height: calc(100vh - 100%);"))>
            @foreach (var nu in _navUnits)
            {
                <div class="d-flex pa-3 align-center" style="color: var(--mud-palette-text-primary);">
                    <MudText Class="flex-grow-1" Style="height: fit-content;" @onclick="() => Navigation.NavigateTo(nu.Category.Link)" Typo="Typo.h5">@nu.Category.Name</MudText>
                    <MudIconButton OnClick="() => OnMobileCategoryClick(nu)" Icon="@Icons.Material.Filled.ArrowForwardIos" Color="Color.Inherit" Size="Size.Small" />
                </div>
            }
        </div>

        <div class="absolute p-6 d-flex flex-column" style=@("transition: all 0.7s ease 0s; -webkit-transition: all 0.7s ease 0s; overflow: hidden; top: 100%; left: 0; right: 0; height: calc(100vh - 100%); background-color: #F8F8F8;" + (_currentCategory == null ? "width: 0; opacity: 0;" : "width: 100%; opacity: 1;"))>
            @if (_currentCategory != null && _currentCategory.Items != null && _currentCategory.Items.Count() > 0)
            {
                <MudButton Class="d-flex pt-3 pb-1 align-center flex-grow-1" Style="max-height: fit-content; color: var(--mud-palette-text-primary);" OnClick="HideMenu">
                    <MudIcon Icon="@Icons.Material.Filled.ArrowBack" Color="Color.Inherit" Size="Size.Small" />
                    <MudText Align="Align.Left" Class="flex-grow-1 pl-2" Style="height: fit-content;" Typo="Typo.h6">Ко всем категориям</MudText>
                </MudButton>
                <div class="flex-grow-1 d-flex flex-column justify-center">
                    
                    <div>
                        @foreach (var nu in _currentCategory.Items)
                        {
                            <MudButton Class="d-flex pa-2 align-center mx-auto" Style="color: var(--mud-palette-text-primary);" OnClick="() => Navigation.NavigateTo(nu.Link)">
                                <MudText Align="Align.Center" Class="flex-grow-1" Style="height: fit-content;" @onclick="() => Navigation.NavigateTo(nu.Link)" Typo="Typo.h6">@nu.Name</MudText>
                            </MudButton>
                        }
                    </div>

                </div>
            }
        </div>
    </MudHidden>

    <MudHidden Breakpoint="Breakpoint.MdAndDown">
        <div class="px-3 py-15" style="display: grid; grid-template-columns: 1fr auto 1fr; align-items: center; width: 100%;">
            <!-- Логотип слева -->
            <div class="d-flex" style="justify-self: start;">
                <MudImage @onclick="NavigateMain" Src="/assets/icons/logo.svg" ObjectPosition="ObjectPosition.Center" Width="45" Height="45" />
            </div>

            <!-- Навигационные кнопки по центру -->
            <div style="display: flex; justify-content: center; gap: 20px;">
                @foreach (var nu in _navUnits)
                {
                    <MudButton Href="@nu.Category.Link" Style="font-size: var(--mud-typography-body1-size); font-weight: 600;" @onmouseover="() => OnDesctopCategoryHover(nu)">@nu.Category.Name</MudButton>
                }
            </div>

            <!-- Иконки справа -->
            <div style="justify-self: end; display: flex; gap: 10px; color: var(--mud-palette-text-primary);">
                <MudIconButton OnClick="SearchService.ToggleSearch" Icon="@Icons.Material.Filled.Search" Size="Size.Large" Color="Color.Inherit" />
                <MudIconButton OnClick="CartService.ToggleCart" Icon="@Icons.Material.Outlined.ShoppingCart" Size="Size.Large" Color="Color.Inherit" />
            </div>
        </div>

        <MudPaper Class="d-flex justify-center absolute"
                  Style=@("transition: all 0.7s ease 0s; -webkit-transition: all 0.7s ease 0s; overflow: hidden; top: 100%; left: 0; right: 0; background-color: #F8F8F8; width: 100%;" + (_currentCategory == null ? "height: 0; padding: 0 20px 0 20px;" : "padding: 20px;"))
                  Elevation="0"
                  @onmouseleave="HideMenu">
            @if (_currentCategory != null &&  _currentCategory.Items != null && _currentCategory.Items.Count() > 0)
            {
                <div class="resize-width" style="display: grid; grid-template-columns: repeat(@_menuSubCategoriesBatchAmount, 1fr); gap: 20px; text-align: center;">


                    <MudText @onclick="() => Navigation.NavigateTo(_currentCategory.Category.Link)" Align="Align.Left" Typo="Typo.body1">@_currentCategory.Category.Name</MudText>

                    <!-- Столбцы с подкатегориями -->
                    @for (int i = 0; i < _menuSubCategoriesBatchAmount; i++)
                    {
                        var LocalCopy = i;
                        int SubCategoriesCount = _currentCategory.Items.Count();

                        <div style="color: #BDBDBD; font-size: 15px; font-weight: 700; text-align: left;">
                            @if (SubCategoriesCount - LocalCopy * _menuSubCategoriesBatchCount > 0)
                            {
                                foreach (var navItem in _currentCategory.Items.Skip(LocalCopy * _menuSubCategoriesBatchCount).Take(_menuSubCategoriesBatchCount))
                                {
                                    <MudButton Href="@navItem.Link" Style="display: block; margin: 5px 0; font-size: calc(var(--mud-typography-body2-size) - 3px)">@navItem.Name</MudButton>
                                }
                            }
                        </div>
                    }
                </div>
            }
        </MudPaper>

    </MudHidden>

</MudAppBar>

@code {
    private NavigationUnit? _currentCategory;
    private IEnumerable<NavigationUnit> _navUnits = new NavigationUnit[0];
    private bool _isMenuHidden = true;
    private static int _menuSubCategoriesBatchCount = 4;
    private static int _menuSubCategoriesBatchAmount = 5;

    protected override async Task OnInitializedAsync()
    {
        _navUnits = await DataProvider.GetNavigationUnitsAsync();
    }

    private void NavigateMain()
    {
        Navigation.NavigateTo("/");
    }

    private void OnDesctopCategoryHover(NavigationUnit nu)
    {
        if (nu != null && nu.Items != null && nu.Items.Count() > 0 && nu != _currentCategory)
        {
            Console.WriteLine($"New category hovered - {nu.Category.Name}");
            _currentCategory = nu;
        }
    }

    private void HideMenu()
    {
        _currentCategory = null;
    }

    private void OnMobileCategoryClick(NavigationUnit nu)
    {
        if (nu.Items.Any())
        {
            _currentCategory = nu;
        }
        else
        {
            Navigation.NavigateTo(nu.Category.Link);
        }
    }

}
