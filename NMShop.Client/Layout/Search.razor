@using NMShop.Client.Services;
@using NMShop.Client.Components;

@implements IDisposable

@inject NavigationManager Navigation;
@inject SearchService SearchService

<div @onclick=SearchService.ToggleSearch class="absolute"
     style=@($"overflow: hidden; transition: all 0.6s ease 0s; -webkit-transition: all 0.6s ease 0s; backdrop-filter: blur(10px); background: linear-gradient(0deg, rgba(0, 0, 0, 0.14), rgba(0, 0, 0, 0.14)), rgba(255, 255, 255, 0.4); width: 100vw; z-index: {(int)ZEnum.AppBar - 1}; height: " + (SearchService.IsSearchOpen ? "100%;" : "0px;"))>

    <div @onclick:stopPropagation
         class="mb-auto d-flex flex-column justify-center"
         style=@($"width: 100vw; height: 25vh; background-color: white; z-index: {(int)ZEnum.AppBar};")>

        <div class="resize-width d-flex flex-column flex-md-row mx-auto mt-10" style="gap: 20px;">
            <input placeholder="Поиск"
                   style="max-width: 100%; font-size: var(--mud-typography-body1-size); color: #000000; font-weight: 400; -webkit-appearance: none; border: 1px solid #BDBDBD; resize: none; border-radius: 25px;"
                   class="d-flex flex-grow-1 px-5 py-3"
                   type="text"
                   value="@_searchQuery" @onchange="@((ChangeEventArgs e) => _searchQuery = e.Value.ToString())"
                   size="50" />

            <MudText @onmouseover="() => {_isSearchButtonHovered = true;}"
                     @onmouseout="() => {_isSearchButtonHovered = false;}"
                     @onclick="GoToResults"
                     Style=@SearchButtonStyle
                     Typo="Typo.body1" Class="px-5 py-3">Найти</MudText>
        </div>
    </div>
</div>

@code {

    private bool _isSearchButtonHovered = false;

    private string _searchQuery = string.Empty;

    private string SearchButtonStyle =>
    "transition: all 0.6s ease 0s; -webkit-transition: all 0.6s ease 0s; text-align: center; border-radius: 25px; cursor: pointer; box-shadow: 0px 0px 10px rgba(0, 0, 0, 0.07); "
    + (_isSearchButtonHovered ? "color: black; background-color: white;" : "color: white; background-color: black;");

    protected override void OnInitialized()
    {
        SearchService.OnChange += StateHasChanged;
    }

    public void Dispose()
    {
        SearchService.OnChange -= StateHasChanged;
    }

    void GoToResults()
    {
        _isSearchButtonHovered = false;
        Navigation.NavigateTo("/catalog/" + new ProductFilter() { SearchQuery = _searchQuery }.ToQueryString());
        SearchService.ToggleSearch();
    }
}



