@using NMShop.Client.Services;
@using NMShop.Client.Components;

@implements IDisposable

@inject NavigationManager Navigation;
@inject CartService CartService
@inject LayoutService LayoutService

<div @onclick="LayoutService.ToggleCart" class="absolute"
     style=@($"overflow: hidden; transition: right 0.4s ease-in-out, opacity 0.4s ease-in-out; backdrop-filter: blur(10px); background: linear-gradient(0deg, rgba(0, 0, 0, 0.14), rgba(0, 0, 0, 0.14)), rgba(255, 255, 255, 0.4); height: 100vh; z-index: {(int)ZEnum.Cart - 1}; right: " + (LayoutService.IsCartOpen ? "0px;" : "-800px") + "; width: 800px; max-width: 100vw;")>

    
    <div @onclick:stopPropagation
         class="ml-auto d-flex flex-column justify-space-between pt-6"
         style=@($"width: 800px; max-width: 100vw; height: 100vh; background-color: white; z-index: {(int)ZEnum.Cart};")>

        <div class="px-4">
            <div class="d-flex justify-space-between align-center mb-3">
                <MudText Typo="Typo.h4">Корзина</MudText>

                <MudIconButton Class="pa-2" Style="height: fit-content;" OnClick="LayoutService.ToggleCart" Icon="@Icons.Material.Filled.Close" Size="Size.Large" />
            </div>

            @if (LayoutService.IsCartOpen)
            {
                <CartItemsGrid />
            }
        </div>

        @if (CartService.Items.Count() > 0)
        {
            <div class="d-flex justify-space-between pa-4 align-center" style="border-top: 1px solid #000000;">

                <div style="height: fit-content;">
                    <MudText Inline="true" Typo="Typo.h6">ИТОГО:</MudText>
                    <MudText Inline="true" Typo="Typo.h5">@CartService.GetTotalCartPrice() ₽</MudText>
                </div>

                <MudText @onmouseover="() => {_isCheckoutButtonHovered = true;}"
                         @onmouseout="() => {_isCheckoutButtonHovered = false;}"
                         @onclick="GoToCheckOut"
                         Style=@CheckoutButtonStyle
                         Typo="Typo.body1" Class="px-5 py-3">ОФОРМИТЬ ЗАКАЗ</MudText>
            </div>
        }
        else
        {
            <MudText Class="my-4 mx-auto" Typo="Typo.h4">Корзина пуста</MudText>
        }
    </div>
</div>


@code {

    private bool _isCheckoutButtonHovered = false;

    private string CheckoutButtonStyle =>
    "transition: all 0.6s ease 0s; -webkit-transition: all 0.6s ease 0s; border-radius: 20px; cursor: pointer; box-shadow: 0px 0px 10px rgba(0, 0, 0, 0.07); text-transform: uppercase; border: none; "
    + (_isCheckoutButtonHovered ? "color: black; background-color: white;" : "color: white; background-color: black;");

    protected override void OnInitialized()
    {
        CartService.OnChange += StateHasChanged;
        LayoutService.OnChange += StateHasChanged;
    }

    public void Dispose()
    {
        CartService.OnChange -= StateHasChanged;
        LayoutService.OnChange += StateHasChanged;
    }

    void GoToCheckOut()
    {
        _isCheckoutButtonHovered = false;
        Navigation.NavigateTo("/checkout");
        LayoutService.IsCartOpen = false;
    }
}



