@using NMShop.Shared.Models
@using NMShop.Client.Data

@inject TestDataProvider DataProvider
@inject NavigationManager Navigation

@page "/catalog/{productType}/{productCode}"

<MudContainer Class="mt-10" MaxWidth="MaxWidth.ExtraLarge">
    <div class="d-flex" style="gap: 7px;">
        <MudLink Typo="Typo.h5" Href="/catalog">Каталог</MudLink>
        /
        <MudLink Typo="Typo.h5" Href=@($"/catalog/{productType}")>@productType.Localize()</MudLink>
        /
        <MudText Typo="Typo.h5">@productCode</MudText>
        <MudSpacer/>
    </div>
    <div class="d-flex">
        <MudCarousel Class="" Style="" ShowArrows="true" ShowBullets="true" EnableSwipeGesture="true" AutoCycle="true" TData="object">
            @foreach(ProductImage pi in product.Images)
            {
                <MudCarouselItem Transition="Transition.Fade">
                    <img src="@pi.Bytes.ToSrcString()" style="width: 100%; height: auto; object-position: center; "/>
                </MudCarouselItem>
            }
        </MudCarousel>
    </div>
</MudContainer>

@code {
    [Parameter]
    public string productType { get; set; }
    [Parameter]
    public string productCode { get; set; }

    private Product product;


    protected override async Task OnInitializedAsync()
    {
        var parsedSuccesfully = int.TryParse(productCode, out var parsedId);
        if (parsedSuccesfully)
        {
            product = await DataProvider.GetById(parsedId);
        }
        else Navigation.NavigateTo("/notFound");
    }

}
