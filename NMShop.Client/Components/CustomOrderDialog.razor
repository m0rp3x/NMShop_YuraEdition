@using System.Net
@using NMShop.Shared.Scaffold
@using NMShop.Client.Services
@using System.Net.Http.Json
@inject ClientDataProvider ClientDataProvider

<MudDialog MaxWidth="MaxWidth.Small" Style="padding: 20px; background-color: #F0F4F5; border-radius: 12px;">
    <DialogContent>
        <MudText Typo="Typo.h5" Class="mb-4">Оформление индивидуального заказа</MudText>
        <MudTextField Label="Ваше имя" @bind-Value="UserName" Required="true" Variant="Variant.Outlined" Class="mb-3" />
        <MudTextField Label="Ваш номер телефона" @bind-Value="UserPhone" Required="true" Variant="Variant.Outlined" Class="mb-3" />
        <MudTextField Label="Опишите модель товара" @bind-Value="ProductDescription" Required="true" Variant="Variant.Outlined" Placeholder="Опишите модель товара" Lines="3" />
    </DialogContent>
    <DialogActions>
        <MudButton Color="Color.Primary" Variant="Variant.Filled" OnClick="SubmitForm">Отправить</MudButton>
    </DialogActions>
</MudDialog>

@code {
    [CascadingParameter]
    MudDialogInstance MudDialog { get; set; }

    [Parameter] 
    public EventCallback<string> OnFormSubmitted { get; set; }

    private string UserName { get; set; }
    private string UserPhone { get; set; }
    private string ProductDescription { get; set; }

    private async Task SubmitForm()
    {
        if (string.IsNullOrWhiteSpace(UserName) || string.IsNullOrWhiteSpace(UserPhone) || string.IsNullOrWhiteSpace(ProductDescription))
        {
            Console.WriteLine("Все поля формы должны быть заполнены.");
            return;
        }

        var (isSuccess, message) = await ClientDataProvider.SubmitFormAsync(UserName, UserPhone, ProductDescription);

        if (isSuccess)
        {
            await OnFormSubmitted.InvokeAsync(message);
            MudDialog.Close(DialogResult.Ok(true));
        }
        else
        {
            Console.WriteLine(message);
            MudDialog.Close(DialogResult.Cancel());
        }
    }

    private void Cancel() => MudDialog.Cancel();
}
