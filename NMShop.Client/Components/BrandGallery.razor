@using NMShop.Client.Services
@using NMShop.Shared.Scaffold

@inject ClientDataProvider DataProvider;
@inject NavigationManager Navigation;

<MudGrid Class="mt-10" Spacing="0">
    @for (int i = 0; i < 3; i++)
    {
        var LocalCopy = i;
        if (i < brandGalleries.Count)
        {
            var bg = brandGalleries[i];
            <MudItem xs="4">
                <div class="image-container">
                    <img src=@(bg.Image != null && bg.Image.Length > 0 ? bg.Image.ToSrcString() : GetDefaultImage(LocalCopy)) alt="brandImage" />
                    <div class="overlay">
                        <div class="brand-info">
                            <h1 class="no-select">@bg.Brand.Name</h1>
                            <br />
                            <MudButton OnClick="() => GoToBrandById(bg.BrandId)" Color="Color.Tertiary" Variant="Variant.Filled">В Категорию</MudButton>
                        </div>
                    </div>
                </div>
            </MudItem>
        }
        else
        {
            // Плейсхолдер для отсутствующих записей
            <MudItem xs="4">
                <div class="image-container">
                    <img src=@GetDefaultImage(LocalCopy) alt="brandImage@(LocalCopy + 1)" />
                    <div class="overlay">
                        <div class="brand-info">
                            <h1 class="no-select">Placeholder Brand</h1>
                            <br />
                            <MudButton Color="Color.Tertiary" Variant="Variant.Filled">В Категорию</MudButton>
                        </div>
                    </div>
                </div>
            </MudItem>
        }
    }
</MudGrid>

@code {
    private List<NMShop.Shared.Scaffold.BrandGallery> brandGalleries = new();

    protected override async Task OnInitializedAsync()
    {
        try
        {
            var galleries = await DataProvider.GetBrandGalleriesAsync();
            brandGalleries = galleries.ToList();
        }
        catch (Exception ex)
        {
            Console.Error.WriteLine($"Ошибка при загрузке галереи брендов: {ex.Message}");
        }
    }

    private void GoToBrandById(int id)
    {
        Navigation.NavigateTo("/catalog/" + new ProductFilter() { BrandIds = new() { id } }.ToQueryString());
    }

    private readonly List<string> defaultImages = new()
    {
        "/assets/brandGalleryImages/brandImage1.jpg",
        "/assets/brandGalleryImages/brandImage2.jpg",
        "/assets/brandGalleryImages/brandImage3.jpg"
    };

    private string GetDefaultImage(int index = 0)
    {
        return index < defaultImages.Count ? defaultImages[index] : defaultImages.FirstOrDefault() ?? string.Empty;
    }

}
