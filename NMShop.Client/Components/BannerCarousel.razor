@using NMShop.Client.Services
@using NMShop.Shared.Scaffold

@inject ClientDataProvider DataProvider;


<link rel="preload" href="/assets/banners/favorite_brands.png" as="image">
<link rel="preload" href="/assets/banners/delivery.png" as="image">
<link rel="preload" href="/assets/banners/seasonal1.png" as="image">
<link rel="preload" href="/assets/banners/seasonal2.png" as="image">

<MudCarousel Class="mud-width-full" Style="aspect-ratio: 4375 / 1200;" ShowArrows=false ShowBullets=false EnableSwipeGesture=true AutoCycle=true TData="object">
    @if (carouselItems.Any())
    {
        @foreach (var banner in carouselItems)
        {
            <MudCarouselItem Transition=@Transition.Slide Color="@Color.Primary">
                <MudImage Src=@(banner.Image.ToSrcString()) Style="width:100%; height:auto; aspect-ratio: 4375 / 1200;" ObjectFit="ObjectFit.Cover" />
            </MudCarouselItem>
        }
    }
    else
    {
        @foreach (string banner in new string[] { "favorite_brands", "delivery", "seasonal1", "seasonal2" })
        {
            <MudCarouselItem Transition=@Transition.Slide Color="@Color.Primary">
                <MudImage Src=@($"/assets/banners/{banner}.png") Style="width:100%; height:auto; aspect-ratio: 4375 / 1200;" ObjectFit="ObjectFit.Cover" />
            </MudCarouselItem>
        }
    }
</MudCarousel>

@code {
    List<BannerCarouselItem> carouselItems = new();

    protected override async Task OnInitializedAsync()
    {
        try
        {
            var banners = await DataProvider.GetBannerCarouselItems();
            carouselItems = banners.ToList();
        }
        catch (Exception ex)
        {
            Console.Error.WriteLine($"Ошибка при загрузке баннеров: {ex.Message}");
        }
    }
}